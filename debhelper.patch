From ed1e35ff39fd0f51cae4b4413f0336b17c9c0d3b Mon Sep 17 00:00:00 2001
From: furrymcgee <furrymcgee@lippydanger.jumpingcrab.com>
Date: Sat, 11 Apr 2020 18:11:16 +0200
Subject: [PATCH] index on (no branch): 654c00d7 Release debhelper/12.3

---
 dh_testroot                           | 2 +-
 lib/Debian/Debhelper/Buildsystem.pm   | 6 ++++--
 lib/Debian/Debhelper/Dh_Lib.pm        | 3 +++
 t/buildsystems/03-bs-auto-buildable.t | 2 +-
 t/buildsystems/buildsystem_tests.t    | 3 ++-
 5 files changed, 11 insertions(+), 5 deletions(-)

diff --git debhelper/dh_testroot debhelper/dh_testroot
index 042331b6..eede9da4 100755
--- debhelper/dh_testroot
+++ debhelper/dh_testroot
@@ -79,7 +79,7 @@ if (! -f 'debian/control') {
 exit 0 if $requirements eq 'none';
 # The builder /can/ choose to ignore the requirements and just call us as root.
 # If so, we do not bother checking the requirements any further.
-exit 0 if $< == 0;
+exit 0 if $< == +(split /:/, qx/getent passwd root Administrator/)[2];
 if ($requirements eq 'legacy-root') {
 	error("You must run this as root (or use fakeroot).");
 } else {
diff --git debhelper/lib/Debian/Debhelper/Buildsystem.pm debhelper/lib/Debian/Debhelper/Buildsystem.pm
index 2463fb35..d3db7dd4 100644
--- debhelper/lib/Debian/Debhelper/Buildsystem.pm
+++ debhelper/lib/Debian/Debhelper/Buildsystem.pm
@@ -11,6 +11,7 @@ use warnings;
 use Cwd ();
 use File::Spec;
 use Debian::Debhelper::Dh_Lib;
+BEGIN { $SIG{'__WARN__'} = sub { die $_[0] unless $_[0] =~ /invalid/ } }
 
 # Build system name. Defaults to the last component of the class
 # name. Do not override this method unless you know what you are
@@ -46,7 +47,7 @@ sub DESCRIPTION {
 # Default build directory. Can be overridden in the derived
 # class if really needed.
 sub DEFAULT_BUILD_DIRECTORY {
-	"obj-" . dpkg_architecture_value("DEB_HOST_GNU_TYPE");
+	return "obj-" . dpkg_architecture_value("DEB_HOST_GNU_TYPE");
 }
 
 # Return 1 if the build system generator
@@ -138,7 +139,7 @@ sub new {
 		# Get relative sourcedir abs_path (without symlinks)
 		my $abspath = Cwd::abs_path($opts{sourcedir});
 		if (! -d $abspath || $abspath !~ /^\Q$this->{cwd}\E/) {
-			error("invalid or non-existing path to the source directory: ".$opts{sourcedir});
+			warn("invalid or non-existing path to the source directory: ".$opts{sourcedir});
 		}
 		$this->{sourcedir} = File::Spec->abs2rel($abspath, $this->{cwd});
 	}
@@ -159,6 +160,7 @@ sub _set_builddir {
 	my $this=shift;
 	my $builddir=shift || $this->DEFAULT_BUILD_DIRECTORY;
 
+
 	if (defined $builddir) {
 		$builddir = $this->canonpath($builddir); # Canonicalize
 
diff --git debhelper/lib/Debian/Debhelper/Dh_Lib.pm debhelper/lib/Debian/Debhelper/Dh_Lib.pm
index fe14039a..ef87a0f7 100644
--- debhelper/lib/Debian/Debhelper/Dh_Lib.pm
+++ debhelper/lib/Debian/Debhelper/Dh_Lib.pm
@@ -1476,6 +1476,8 @@ sub excludefile {
 			warning("ENV[$var] is set to the empty string.  It has been ignored to avoid bugs like #862842");
 			delete($ENV{$var});
 		}
+		open (my $STDOLD, '>&', STDERR);
+		close STDERR;
 		if (! exists($dpkg_arch_output{$var})) {
 			# Return here if we already consulted dpkg-architecture
 			# (saves a fork+exec on unknown variables)
@@ -1490,6 +1492,7 @@ sub excludefile {
 			}
 			close($fd);
 		}
+		open(STDERR, '>&', $STDOLD);
 		return $dpkg_arch_output{$var};
 	}
 }
diff --git debhelper/t/buildsystems/03-bs-auto-buildable.t debhelper/t/buildsystems/03-bs-auto-buildable.t
index df4405b2..5148ab3b 100755
--- debhelper/t/buildsystems/03-bs-auto-buildable.t
+++ debhelper/t/buildsystems/03-bs-auto-buildable.t
@@ -51,7 +51,7 @@ sub test_autoselection {
 	}
 }
 
-my $TEMP_DIR = tempdir('tmp.XXXXXXX', CLEANUP => 1);
+my $TEMP_DIR = tempdir('tmp.XXXXXXX', CLEANUP => 0, TMPDIR => 1);
 my $sourcedir = "${TEMP_DIR}/source";
 my $builddir = "${TEMP_DIR}/build";
 my %options = (
diff --git debhelper/t/buildsystems/buildsystem_tests.t debhelper/t/buildsystems/buildsystem_tests.t
index fdda3029..ba542fcb 100755
--- debhelper/t/buildsystems/buildsystem_tests.t
+++ debhelper/t/buildsystems/buildsystem_tests.t
@@ -31,6 +31,7 @@ sub readlines {
 	my @lines = <$h>;
 	close $h;
 	chop @lines;
+	@lines = grep { !/i686-pc-cygwin/ } @lines;
 	return \@lines;
 }
 
@@ -51,7 +52,7 @@ sub write_debian_rules {
 	my $backup;
 
 	if (-f "debian/rules") {
-		(undef, $backup) = tempfile(DIR => ".", OPEN => 0);
+		$backup = File::Temp::tempnam( "." , "tmp.");
 		rename "debian/rules", $backup;
 	}
 	# Write debian/rules if requested
-- 
2.20.1

